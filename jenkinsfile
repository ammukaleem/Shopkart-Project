pipeline {
    agent any

    stages {
        stage('git Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/jaiswaladi246/Ekart.git'
            }
        }
       stage('Build') {
            steps {
               sh "mvn clean install -DskipTests"
            }
        }
        stage('OWASP Dependency Check') {
            steps {
                sh 'mvn org.owasp:dependency-check-maven:check'
            }
        }
        stage('Static Code Analysis') {
            environment {
            SONAR_URL = "http://192.168.56.11:9000"
           }
        steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
        stage('Docker Build & Push Image') {
            steps {
                 script {
                     docker.withRegistry('https://index.docker.io/v1/', "docker-cred")  {
                     sh "docker build -t dockaleem/shopcart:latest -f docker/Dockerfile ."
                     sh "docker push dockaleem/shopcart:latest"
                  }
               }
            }
        }
        stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "ammukaleem"
            versionTag = "v${BUILD_NUMBER}.0"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "mdkaleem777@gmail.com"
                    git config user.name "ammukaleem"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s|dockaleem/ultimate-cicd:v[0-9.]*|dockaleem/ultimate-cicd:${versionTag}|" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
                          

            }
        }
    }    
    }
}